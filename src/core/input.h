#ifndef INCLUDE_INPUT_H
#define INCLUDE_INPUT_H

#include "defines.h"

namespace HY3D
{
	enum input_button
	{
		INPUT_BUTTON_UNSUPPORTED,

		MOUSE_BUTTON_LEFT,
		MOUSE_BUTTON_RIGHT,
		MOUSE_BUTTON_MIDDLE,

		KEYBOARD_BUTTON_A,
		KEYBOARD_BUTTON_B,
		KEYBOARD_BUTTON_C,
		KEYBOARD_BUTTON_D,
		KEYBOARD_BUTTON_E,
		KEYBOARD_BUTTON_F,
		KEYBOARD_BUTTON_G,
		KEYBOARD_BUTTON_H,
		KEYBOARD_BUTTON_I,
		KEYBOARD_BUTTON_J,
		KEYBOARD_BUTTON_K,
		KEYBOARD_BUTTON_L,
		KEYBOARD_BUTTON_M,
		KEYBOARD_BUTTON_N,
		KEYBOARD_BUTTON_O,
		KEYBOARD_BUTTON_P,
		KEYBOARD_BUTTON_Q,
		KEYBOARD_BUTTON_R,
		KEYBOARD_BUTTON_S,
		KEYBOARD_BUTTON_T,
		KEYBOARD_BUTTON_U,
		KEYBOARD_BUTTON_V,
		KEYBOARD_BUTTON_W,
		KEYBOARD_BUTTON_X,
		KEYBOARD_BUTTON_Y,
		KEYBOARD_BUTTON_Z,

		KEYBOARD_BUTTON_0,
		KEYBOARD_BUTTON_1,
		KEYBOARD_BUTTON_2,
		KEYBOARD_BUTTON_3,
		KEYBOARD_BUTTON_4,
		KEYBOARD_BUTTON_5,
		KEYBOARD_BUTTON_6,
		KEYBOARD_BUTTON_7,
		KEYBOARD_BUTTON_8,
		KEYBOARD_BUTTON_9,
		KEYBOARD_BUTTON_NUMPAD_0,
		KEYBOARD_BUTTON_NUMPAD_1,
		KEYBOARD_BUTTON_NUMPAD_2,
		KEYBOARD_BUTTON_NUMPAD_3,
		KEYBOARD_BUTTON_NUMPAD_4,
		KEYBOARD_BUTTON_NUMPAD_5,
		KEYBOARD_BUTTON_NUMPAD_6,
		KEYBOARD_BUTTON_NUMPAD_7,
		KEYBOARD_BUTTON_NUMPAD_8,
		KEYBOARD_BUTTON_NUMPAD_9,

		KEYBOARD_BUTTON_ESC,
		KEYBOARD_BUTTON_TAB,
		KEYBOARD_BUTTON_CAPS,
		KEYBOARD_BUTTON_SHIFT,
		KEYBOARD_BUTTON_CTRL,
		KEYBOARD_BUTTON_ALT,
		KEYBOARD_BUTTON_BACKSPACE,
		KEYBOARD_BUTTON_SPACE,
		KEYBOARD_BUTTON_ENTER,

		KEYBOARD_BUTTON_LEFT,
		KEYBOARD_BUTTON_UP,
		KEYBOARD_BUTTON_RIGHT,
		KEYBOARD_BUTTON_DOWN,

		KEYBOARD_BUTTON_F1,
		KEYBOARD_BUTTON_F2,
		KEYBOARD_BUTTON_F3,
		KEYBOARD_BUTTON_F4,
		KEYBOARD_BUTTON_F5,
		KEYBOARD_BUTTON_F6,
		KEYBOARD_BUTTON_F7,
		KEYBOARD_BUTTON_F8,
		KEYBOARD_BUTTON_F9,
		KEYBOARD_BUTTON_F10,
		KEYBOARD_BUTTON_F11,
		KEYBOARD_BUTTON_F12,

		INPUT_BUTTON_COUNT
	};

	namespace Input
	{
		global_var const char *buttonStr[] = {
			"INPUT_BUTTON_UNSUPPORTED",
			"MOUSE_BUTTON_LEFT",
			"MOUSE_BUTTON_RIGHT",
			"MOUSE_BUTTON_MIDDLE",
			"KEYBOARD_BUTTON_A",
			"KEYBOARD_BUTTON_B",
			"KEYBOARD_BUTTON_C",
			"KEYBOARD_BUTTON_D",
			"KEYBOARD_BUTTON_E",
			"KEYBOARD_BUTTON_F",
			"KEYBOARD_BUTTON_G",
			"KEYBOARD_BUTTON_H",
			"KEYBOARD_BUTTON_I",
			"KEYBOARD_BUTTON_J",
			"KEYBOARD_BUTTON_K",
			"KEYBOARD_BUTTON_L",
			"KEYBOARD_BUTTON_M",
			"KEYBOARD_BUTTON_N",
			"KEYBOARD_BUTTON_O",
			"KEYBOARD_BUTTON_P",
			"KEYBOARD_BUTTON_Q",
			"KEYBOARD_BUTTON_R",
			"KEYBOARD_BUTTON_S",
			"KEYBOARD_BUTTON_T",
			"KEYBOARD_BUTTON_U",
			"KEYBOARD_BUTTON_V",
			"KEYBOARD_BUTTON_W",
			"KEYBOARD_BUTTON_X",
			"KEYBOARD_BUTTON_Y",
			"KEYBOARD_BUTTON_Z",
			"KEYBOARD_BUTTON_0",
			"KEYBOARD_BUTTON_1",
			"KEYBOARD_BUTTON_2",
			"KEYBOARD_BUTTON_3",
			"KEYBOARD_BUTTON_4",
			"KEYBOARD_BUTTON_5",
			"KEYBOARD_BUTTON_6",
			"KEYBOARD_BUTTON_7",
			"KEYBOARD_BUTTON_8",
			"KEYBOARD_BUTTON_9",
			"KEYBOARD_BUTTON_NUMPAD_0",
			"KEYBOARD_BUTTON_NUMPAD_1",
			"KEYBOARD_BUTTON_NUMPAD_2",
			"KEYBOARD_BUTTON_NUMPAD_3",
			"KEYBOARD_BUTTON_NUMPAD_4",
			"KEYBOARD_BUTTON_NUMPAD_5",
			"KEYBOARD_BUTTON_NUMPAD_6",
			"KEYBOARD_BUTTON_NUMPAD_7",
			"KEYBOARD_BUTTON_NUMPAD_8",
			"KEYBOARD_BUTTON_NUMPAD_9",
			"KEYBOARD_BUTTON_ESC",
			"KEYBOARD_BUTTON_TAB",
			"KEYBOARD_BUTTON_CAPS",
			"KEYBOARD_BUTTON_SHIFT",
			"KEYBOARD_BUTTON_CTRL",
			"KEYBOARD_BUTTON_ALT",
			"KEYBOARD_BUTTON_BACKSPACE",
			"KEYBOARD_BUTTON_SPACE",
			"KEYBOARD_BUTTON_ENTER",
			"KEYBOARD_BUTTON_LEFT",
			"KEYBOARD_BUTTON_UP",
			"KEYBOARD_BUTTON_RIGHT",
			"KEYBOARD_BUTTON_DOWN",
			"KEYBOARD_BUTTON_F1",
			"KEYBOARD_BUTTON_F2",
			"KEYBOARD_BUTTON_F3",
			"KEYBOARD_BUTTON_F4",
			"KEYBOARD_BUTTON_F5",
			"KEYBOARD_BUTTON_F6",
			"KEYBOARD_BUTTON_F7",
			"KEYBOARD_BUTTON_F8",
			"KEYBOARD_BUTTON_F9",
			"KEYBOARD_BUTTON_F10",
			"KEYBOARD_BUTTON_F11",
			"KEYBOARD_BUTTON_F12",
			"INPUT_BUTTON_COUNT"};
	} // namespace Input

	struct input_state
	{
		bool wasPressed[INPUT_BUTTON_COUNT];
		bool isPressed[INPUT_BUTTON_COUNT];
	};

	void InputProcessButton(input_button button, bool pressed);
	bool InputIsKeyPressed(input_button button);
} // namespace HY3D

#endif // INCLUDE_INPUT_H